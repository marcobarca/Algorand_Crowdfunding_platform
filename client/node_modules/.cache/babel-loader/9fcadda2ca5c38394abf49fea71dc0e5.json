{"ast":null,"code":"var _jsxFileName = \"/Users/marco/Desktop/react-bootstrap-project/src/Components/ConnectButton.js\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnectButton() {\n  const connectAlgoSigner = async () => {\n    if (typeof AlgoSigner !== \"undefined\" && typeof window !== 'undefined') {\n      await AlgoSigner.connect();\n      const account = await getUserAccount();\n      localStorage.setItem('connectedAccount', String(account));\n      if (account) setIsAccountConnected(true);\n      addToast(\"Account connected successfully\", {\n        appearance: 'success',\n        autoDismiss: true\n      });\n    } else {\n      addToast(\"This browser doesn't have the AlgoSigner extension installed\", {\n        appearance: 'warning',\n        autoDismiss: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: connectAlgoSigner\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = ConnectButton;\nexport default ConnectButton;\nvar _c;\n$RefreshReg$(_c, \"ConnectButton\");","map":{"version":3,"names":["Button","Form","Col","Row","ConnectButton","connectAlgoSigner","AlgoSigner","window","connect","account","getUserAccount","localStorage","setItem","String","setIsAccountConnected","addToast","appearance","autoDismiss"],"sources":["/Users/marco/Desktop/react-bootstrap-project/src/Components/ConnectButton.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Col, Row } from 'react-bootstrap';\n\nfunction ConnectButton() {\n\n\n    const connectAlgoSigner = async () => {\n        if (typeof AlgoSigner !== \"undefined\" && typeof window !== 'undefined') {\n          await AlgoSigner.connect();\n          const account = await getUserAccount();\n          localStorage.setItem('connectedAccount', String(account));\n          if (account) setIsAccountConnected(true)\n          addToast(\"Account connected successfully\", {\n            appearance: 'success',\n            autoDismiss: true,\n          })\n        } else {\n          addToast(\"This browser doesn't have the AlgoSigner extension installed\", {\n            appearance: 'warning',\n            autoDismiss: true,\n          })\n        }\n      };\n\n    return (\n        <Button\n            onClick={connectAlgoSigner}\n        />\n    );\n}\n\nexport default ConnectButton;"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC;AAE3C,SAASC,aAAa,GAAG;EAGrB,MAAMC,iBAAiB,GAAG,YAAY;IAClC,IAAI,OAAOC,UAAU,KAAK,WAAW,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MACtE,MAAMD,UAAU,CAACE,OAAO,EAAE;MAC1B,MAAMC,OAAO,GAAG,MAAMC,cAAc,EAAE;MACtCC,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEC,MAAM,CAACJ,OAAO,CAAC,CAAC;MACzD,IAAIA,OAAO,EAAEK,qBAAqB,CAAC,IAAI,CAAC;MACxCC,QAAQ,CAAC,gCAAgC,EAAE;QACzCC,UAAU,EAAE,SAAS;QACrBC,WAAW,EAAE;MACf,CAAC,CAAC;IACJ,CAAC,MAAM;MACLF,QAAQ,CAAC,8DAA8D,EAAE;QACvEC,UAAU,EAAE,SAAS;QACrBC,WAAW,EAAE;MACf,CAAC,CAAC;IACJ;EACF,CAAC;EAEH,oBACI,QAAC,MAAM;IACH,OAAO,EAAEZ;EAAkB;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV;AAAC,KA1BQD,aAAa;AA4BtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}