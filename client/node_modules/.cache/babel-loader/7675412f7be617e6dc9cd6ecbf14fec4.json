{"ast":null,"code":"var _jsxFileName = \"/Users/marco/Desktop/crowdfunfing_project/client/src/Components/ProjectForm.js\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Col, Row } from 'react-bootstrap';\nimport { getUnsignedTxn, postSignedTxn } from '../APIs/API';\nimport { signTransaction } from '../Utils/AlgoSignerOperations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectForm() {\n  const handleSubmit = async event => {\n    // Stop the form from submitting and refreshing the page.\n    event.preventDefault();\n\n    // Get data from the form.\n    const data = {\n      creator: event.target.creator.value,\n      goal: event.target.goal.value,\n      startDate: event.target.startDate.value,\n      endDate: event.target.endDate.value,\n      chain: event.target.chain.value\n    };\n    console.log(data.chain);\n    switch (data.chain) {\n      case \"Algorand\":\n        try {\n          //FIXME : adding real creator address\n          await getUnsignedTxn(\"R3Z6A6BUXWRYZ3IFBSK7Y54EBN6FRBSYGS4GNTNE2DB5GXJAC64JOMNFNI\", data.goal, data.startDate, data.endDate).then(txn => {\n            console.log(txn[\"txnID\"]);\n            console.log(txn[\"txnBody\"]);\n            signTransaction(txn[\"txnBody\"]).then(binary_signed_txn => {\n              console.log(\"Signed. Sending through post\");\n              postSignedTxn(txn[\"txnID\"], binary_signed_txn);\n            });\n          });\n        } catch (err) {\n          console.log(err);\n        }\n        break;\n      case \"Ethereum\":\n        break;\n      case \"Solana\":\n        break;\n      case \"Cardano\":\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Creator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-2\",\n          controlId: \"creator\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Enter creator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-2\",\n          controlId: \"goal\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Enter goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Start Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"startDate\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"datetime-local\",\n            placeholder: \"Start Date\",\n            name: \"startDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"End Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"endDate\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"datetime-local\",\n            placeholder: \"End Date\",\n            name: \"endDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Chain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"chain\",\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select blockchain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"algorand\",\n              children: \"Algorand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ethereum\",\n              children: \"Ethereum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"solana\",\n              children: \"Solana\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cardano\",\n              children: \"Cardano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["Button","Form","Col","Row","getUnsignedTxn","postSignedTxn","signTransaction","ProjectForm","handleSubmit","event","preventDefault","data","creator","target","value","goal","startDate","endDate","chain","console","log","then","txn","binary_signed_txn","err"],"sources":["/Users/marco/Desktop/crowdfunfing_project/client/src/Components/ProjectForm.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Col, Row } from 'react-bootstrap';\nimport { getUnsignedTxn, postSignedTxn } from '../APIs/API';\nimport { signTransaction } from '../Utils/AlgoSignerOperations';\n\nfunction ProjectForm() {\n\n    const handleSubmit = async (event) => {\n        // Stop the form from submitting and refreshing the page.\n        event.preventDefault()\n\n        // Get data from the form.\n        const data = {\n            creator: event.target.creator.value,\n            goal: event.target.goal.value,\n            startDate: event.target.startDate.value,\n            endDate: event.target.endDate.value,\n            chain: event.target.chain.value,\n        }\n\n        console.log(data.chain)\n\n        switch (data.chain) {\n            case \"Algorand\":\n                try {\n                    //FIXME : adding real creator address\n                    await getUnsignedTxn(\"R3Z6A6BUXWRYZ3IFBSK7Y54EBN6FRBSYGS4GNTNE2DB5GXJAC64JOMNFNI\", data.goal, data.startDate, data.endDate).then(\n                        (txn) => {\n                            console.log(txn[\"txnID\"])\n                            console.log(txn[\"txnBody\"])\n                            signTransaction(txn[\"txnBody\"]).then(\n                                (binary_signed_txn) => {\n                                    console.log(\"Signed. Sending through post\")\n                                    postSignedTxn(txn[\"txnID\"], binary_signed_txn)\n                                }\n                            )\n                        }\n                    )\n                } catch (err) {\n                    console.log(err);\n                }\n                break;\n            case \"Ethereum\":\n                break;\n            case \"Solana\":\n                break;\n            case \"Cardano\":\n                break;\n\n        }\n\n}\n\n\n\nreturn (\n    <Form onSubmit={handleSubmit}>\n        <Row />\n        <Row>\n            <Col />\n            <Col>\n                <Form.Label>Creator</Form.Label>\n                <Form.Group className=\"mb-2\" controlId=\"creator\">\n                    <Form.Control placeholder=\"Enter creator\" />\n                </Form.Group>\n\n                <Form.Label>Goal</Form.Label>\n                <Form.Group className=\"mb-2\" controlId=\"goal\">\n                    <Form.Control placeholder=\"Enter goal\" />\n                </Form.Group>\n\n                <Form.Label>Start Date</Form.Label>\n                <Form.Group className=\"mb-3\" controlId=\"startDate\">\n                    <Form.Control type=\"datetime-local\" placeholder=\"Start Date\" name='startDate' />\n                </Form.Group>\n\n                <Form.Label>End Date</Form.Label>\n                <Form.Group className=\"mb-3\" controlId=\"endDate\">\n                    <Form.Control type=\"datetime-local\" placeholder=\"End Date\" name='endDate' />\n                </Form.Group>\n\n                <Form.Label>Chain</Form.Label>\n                <Form.Group className=\"mb-3\" controlId=\"chain\">\n                    <Form.Select>\n                        <option>Select blockchain</option>\n                        <option value=\"algorand\">Algorand</option>\n                        <option value=\"ethereum\">Ethereum</option>\n                        <option value=\"solana\">Solana</option>\n                        <option value=\"cardano\">Cardano</option>\n                    </Form.Select>\n                </Form.Group>\n\n\n                <Button\n                    variant=\"primary\"\n                    type=\"submit\">\n                    Submit\n                </Button>\n            </Col>\n            <Col />\n        </Row>\n        <Row />\n    </Form>\n);\n}\n\nexport default ProjectForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}